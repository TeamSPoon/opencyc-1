<html>
  <head>
    <META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=UTF-8'>
    <style type='text/css'>
    p {font-family: Arial, sans-serif }
    a {font-family: Arial, sans-serif }
    p {font-size: 100%}
    </style>
  </head>

  <body bgcolor='white'>

<p><b>What's wrong with making a collection called #$Brother?</b></p>

<p>Suppose Billy and Peter are brothers, and we want to tell Cyc this by asserting the following two facts:</p>

<p>
<tt><pre>
(isa Billy Brother)
(isa Peter Brother)
</pre></tt>
</p>

<p>Later, we learn of two other brothers, Jack and Bobby. We tell Cyc about them in the same way:</p>

<p>
<tt><pre>
(isa Jack Brother)
(isa Bobby Brother)
</pre></tt>
</p>

<p>Now, to ask Cyc for instances of #$Brother, we ASK:</p>

<p>
<tt><pre>
(isa ?WHO Brother)
</pre></tt>
</p>

<p>And we get the answer:</p>

<p>
<tt><pre>
4 Answers     ?WHO 

-------------------
 
[Explain #1]  Billy 
[Explain #2]  Peter 
[Explain #3]  Jack 
[Explain #4]  Bobby 
</pre></tt>
</p>

<p>So, Cyc thinks that they are all brothers, because there is no relation that distinguishes which of them are related to which others.</p>


<p>Why the '#$' symbols? Because within the Cyc program, these symbols act as a "reader macro" to indicate to the program that the string of characters that follow them should be interpreted as a Cyc concept term. When programming with Cyc, and when doing ASKs and ASSERTs, it is necessary to precede Cyc terms with '#$'. Note: There is a plan to eliminate the need for '#$' in ASKs and ASSERTs, but they will continue to be needed in SubL programming. And they will continue to be useful in documentation.</p>

  </body>
</html>